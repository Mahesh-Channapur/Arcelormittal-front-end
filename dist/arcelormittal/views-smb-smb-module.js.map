{"version":3,"sources":["./src/app/views/smb/base-price/edit-base-price-addition/edit-base-price-addition.component.ts","./src/app/views/smb/base-price/edit-base-price-addition/edit-base-price-addition.component.html","./src/app/views/smb/grade-list/grade-list.component.ts","./src/app/views/smb/grade-list/grade-list.component.html","./src/app/views/smb/smb-modal/warn-popup/warn-popup.component.ts","./src/app/views/smb/smb-modal/warn-popup/warn-popup.component.html","./src/app/views/smb/extra-certificate-list/extra-certificate-list.component.ts","./src/app/views/smb/extra-certificate-list/extra-certificate-list.component.html","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-edit/incoterm-exceptions-edit.component.ts","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-edit/incoterm-exceptions-edit.component.html","./src/app/views/smb/length-production-list/length-production-list.component.ts","./src/app/views/smb/length-production-list/length-production-list.component.html","./src/app/views/smb/length-logistic-list/length-logistic-list.component.ts","./src/app/views/smb/length-logistic-list/length-logistic-list.component.html","./src/app/views/smb/smb-modal/history-modal/history-modal.component.ts","./src/app/views/smb/smb-modal/history-modal/history-modal.component.html","./src/app/views/smb/smb.module.ts","./src/app/views/smb/smb-modal/add-popup/add-popup.component.ts","./src/app/views/smb/smb-modal/add-popup/add-popup.component.html","./src/app/views/smb/base-price/bulk-upload-base-price-addition/bulk-upload-base-price-addition.component.ts","./src/app/views/smb/base-price/bulk-upload-base-price-addition/bulk-upload-base-price-addition.component.html","./src/app/views/smb/profile-lberia-italy-list/profile-lberia-italy-list.component.ts","./src/app/views/smb/profile-lberia-italy-list/profile-lberia-italy-list.component.html","./src/app/views/smb/base-price/base-price-addition-list/base-price-addition-list.component.ts","./src/app/views/smb/base-price/base-price-addition-list/base-price-addition-list.component.html","./src/app/sample.ts","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-upload/incoterm-exceptions-upload.component.ts","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-upload/incoterm-exceptions-upload.component.html","./src/app/views/smb/profile-list/profile-list.component.ts","./src/app/views/smb/profile-list/profile-list.component.html","./src/app/views/smb/freight-parity-list/freight-parity-list.component.ts","./src/app/views/smb/freight-parity-list/freight-parity-list.component.html","./src/app/views/smb/smb-modal/edit-popup/edit-popup.component.ts","./src/app/views/smb/smb-modal/edit-popup/edit-popup.component.html","./src/app/views/smb/delivery-mill-list/delivery-mill-list.component.ts","./src/app/views/smb/delivery-mill-list/delivery-mill-list.component.html","./src/app/views/smb/smb-modal/upload-validate-modal/upload-validate-modal.component.ts","./src/app/views/smb/smb-modal/upload-validate-modal/upload-validate-modal.component.html","./src/app/views/smb/smb-routing.module.ts","./src/app/views/smb/transport-mode-list/transport-mode-list.component.ts","./src/app/views/smb/transport-mode-list/transport-mode-list.component.html","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-list/incoterm-exceptions-list.component.ts","./src/app/views/smb/incoterm-exceptions/incoterm-exceptions-list/incoterm-exceptions-list.component.html","./src/app/views/smb/smb.component.ts","./src/app/views/smb/smb.component.html"],"names":[],"mappings":"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","file":"views-smb-smb-module.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-base-price-addition',\r\n  templateUrl: './edit-base-price-addition.component.html',\r\n  styleUrls: ['./edit-base-price-addition.component.scss']\r\n})\r\nexport class EditBasePriceAdditionComponent implements OnInit {\r\n  loadingRouteConfig: boolean = false\r\n  editBasePriceAddition: any = FormGroup\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditBasePriceAdditionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n   \r\n      if (this.data.type != 'edit-min-bar') {\r\n        this.apiStringURL = this.apiString.smb\r\n      } else {\r\n        this.apiStringURL = this.apiString.smb_mini_bar\r\n      }\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.url,this.data)\r\n    if (this.data.type != 'edit-min-bar') {\r\n      this.editBasePriceAddition = this.fb.group({\r\n        Amount: [''],\r\n        BusinessCode: [''],\r\n        Currency: [''],\r\n        Document_Item_Currency: [''],\r\n        Market_Country: [''],\r\n        Product_Division: [''],\r\n        Product_Level_02: [''],\r\n        id_value: ['']\r\n      })\r\n    } else {\r\n      this.editBasePriceAddition = this.fb.group({\r\n        Amount: [''],\r\n        BusinessCode: [''],\r\n        Currency: [''],\r\n        Document_Item_Currency: [''],\r\n        Market_Country: [''],\r\n        Customer_Group: [''],\r\n        Market_Customer: [''],\r\n        Beam_Category: [''],\r\n        id_value: ['']\r\n      })\r\n    }\r\n    this.patchValue()\r\n  }\r\n  patchValue() {\r\n    console.log(this.data)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_Param(this.apiStringURL.get, { id: this.data.id }).subscribe((result) => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      let resultData: any = result\r\n      this.editBasePriceAddition.patchValue({\r\n        Amount: resultData.record[0].Amount,\r\n        BusinessCode: resultData.record[0].BusinessCode,\r\n        Currency: resultData.record[0].Currency,\r\n        Document_Item_Currency: resultData.record[0].Document_Item_Currency,\r\n        Market_Country: resultData.record[0].Market_Country,\r\n        id_value: this.data.id\r\n      })\r\n      if (this.data.type != 'edit-min-bar') {\r\n        this.editBasePriceAddition.patchValue({\r\n          Product_Division: resultData.record[0].Product_Division,\r\n          Product_Level_02: resultData.record[0].Product_Level_02,\r\n        })\r\n      } else {\r\n        this.editBasePriceAddition.patchValue({\r\n          Customer_Group: resultData.record[0].Customer_Group,\r\n          Market_Customer: resultData.record[0].Market_Customer,\r\n          Beam_Category: resultData.record[0].Beam_Category,\r\n\r\n        })\r\n      }\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching bace price addition')\r\n      this.closeModel()\r\n    })\r\n\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n\r\n  }\r\n  editRecord() {\r\n    console.group(this.editBasePriceAddition.value)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.apiStringURL.update, this.editBasePriceAddition.value).subscribe(result => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', ' Record successfully updated')\r\n      this.closeModel()\r\n    }, error => {\r\n      console.log(error)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while updating bace price addition')\r\n      // this.closeModel()\r\n    })\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <form [formGroup]=\"editBasePriceAddition\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Business Code</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"BusinessCode\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Market Country</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Market_Country\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Amount\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Document Item Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Document_Item_Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div *ngIf=\"data.type != 'edit-min-bar'; else mini_bar\">\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Division</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Division\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 02</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_02\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <ng-template #mini_bar>\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Market Customer</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Market_Customer\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Beam Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Beam_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n            </ng-template>\r\n\r\n\r\n        </div>\r\n    </form>\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial (click)=\"editRecord()\">\r\n            Update\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { filter } from 'rxjs/operators';\r\nimport { gradeData } from '../smb-interface.service';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n@Component({\r\n  selector: 'app-grade-list',\r\n  templateUrl: './grade-list.component.html',\r\n  styleUrls: ['./grade-list.component.scss']\r\n})\r\nexport class GradeListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.grade\r\n        this.displayedColumns = [\r\n          'BusinessCode',\r\n          'Grade_Category',\r\n          'Market_Country',\r\n          'Document_Item_Currency',\r\n          'Product_Division',\r\n          'Country_Group',\r\n          'Amount',\r\n          'Currency',\r\n          'action',\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.grade_mini_bar\r\n        this.displayedColumns = [\r\n          'BusinessCode',\r\n          'Grade_Category',\r\n          'Market_Country',\r\n          'Document_Item_Currency',\r\n          'Market_Customer',\r\n          'Customer_Group',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getGrade()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getGrade() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<gradeData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getGrade()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getGrade()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"grade\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getGrade()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"grade\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getGrade()\r\n      })\r\n    }\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getGrade()\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/grade/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/grade/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    Add Extra Grade\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    Upload Extra Grade\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    Download Extra Grade\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n                <ng-container matColumnDef=\"BusinessCode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                    <ng-container matColumnDef=\"Product_Division\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Division </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Country_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Country_Group}} </td>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <ng-template #mini_bar>\r\n                    <ng-container matColumnDef=\"Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n\r\n                </ng-template>\r\n\r\n                <ng-container matColumnDef=\"Grade_Category\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Grade Category </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-warn-popup',\r\n  templateUrl: './warn-popup.component.html',\r\n  styleUrls: ['./warn-popup.component.scss']\r\n})\r\nexport class WarnPopupComponent implements OnInit {\r\n  loadingRouteConfig: boolean = false\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<WarnPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiMethod: ApiService,\r\n    \r\n  ) { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data)\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n  }\r\n  deleteRecord() {\r\n    this.loadingRouteConfig = true\r\n    console.log(this.data,this.data.deleteURL)\r\n    this.apiMethod.delete_request_Param(this.data.deleteURL, { id: this.data.id }).subscribe((result) => {\r\n      this.loadingRouteConfig = false\r\n      this.dialogRef.close()\r\n      this.apiMethod.popupMessage('success', 'Record deleted successfully')\r\n    }, error => {\r\n      this.dialogRef.close()\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <p class=\"text-center\"><i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i></p>\r\n    <h1>Are you sure?</h1>\r\n    <p>Do you really want to delete these records? This process cannot be undo.</p>\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial (click)=\"deleteRecord()\">\r\n            OK\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { certificateData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-extra-certificate-list',\r\n  templateUrl: './extra-certificate-list.component.html',\r\n  styleUrls: ['./extra-certificate-list.component.scss']\r\n})\r\nexport class ExtraCertificateListComponent implements OnInit {\r\n  data: any = [\r\n    {\r\n      'BusinessCode': 'test-1',\r\n      'Certificate': 'test-2',\r\n      'Grade_Category': 'test',\r\n      'Market_Country': 'test-3',\r\n      'Document_Item_Currency': 'test-4',\r\n      'Delivering_Mill': 'test-5',\r\n      'Amount': 'test-6',\r\n      'Currency': 'test-7',\r\n      \"id\": 3\r\n    }\r\n  ]\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.certificate\r\n        this.displayedColumns = ['BusinessCode', 'Certificate', 'Grade_Category', 'Market_Country', 'Document_Item_Currency', 'Delivering_Mill', 'Amount', 'Currency', 'action']\r\n      } else {\r\n        this.apiStringURL = this.apiString.certificate_mini_bar\r\n\r\n        this.displayedColumns = ['BusinessCode', 'Certificate', 'Market_Customer', 'Market_Country', 'Grade_Category', 'Customer_Group', 'Document_Item_Currency', 'Amount', 'Currency', 'action']\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCertificate()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getCertificate() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n\r\n    this.dataSource = new MatTableDataSource<certificateData>(this.data)\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<certificateData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getCertificate()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getCertificate()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"certificate\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getCertificate()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"certificate\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getCertificate()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getCertificate()\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/extra-certificate/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/extra-certificate/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button\r\n                    (click)=\"actionClicked('','add')\">\r\n                    Add Extra Certificate\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    Upload Extra Certificate\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    Download Extra Certificate\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n                <ng-container matColumnDef=\"BusinessCode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Certificate\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Certificate </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Certificate}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivering Mill </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                    </ng-container>\r\n\r\n                </div>\r\n\r\n                <ng-template #mini_bar>\r\n                    <ng-container matColumnDef=\"Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n\r\n                </ng-template>\r\n\r\n                <ng-container matColumnDef=\"Grade_Category\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Grade Category </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-incoterm-exceptions-edit',\r\n  templateUrl: './incoterm-exceptions-edit.component.html',\r\n  styleUrls: ['./incoterm-exceptions-edit.component.scss']\r\n})\r\nexport class IncotermExceptionsEditComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  editIncotermExceptionsClick: any = FormGroup\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<IncotermExceptionsEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n\r\n    if (this.data.type != 'edit-min-bar') {\r\n      this.apiStringURL = this.apiString.incoterm_exceptions\r\n    } else {\r\n      this.apiStringURL = this.apiString.incoterm_exceptions_mini_bar\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.url, this.data)\r\n    if (this.data.type != 'edit-min-bar') {\r\n      this.editIncotermExceptionsClick = this.fb.group({\r\n        'Market_Country': [''],\r\n        'Product_Division': [''],\r\n        'Incoterm1': [''],\r\n        'Customer_Group': [''],\r\n        'Beam_Category': [''],\r\n        'Delivering_Mill': [''],\r\n        'Document_Item_Currency': [''],\r\n        'Amount': [''],\r\n        'Currency': [''],\r\n        'id': ['']\r\n      })\r\n    } else {\r\n      this.editIncotermExceptionsClick = this.fb.group({\r\n        'Market_Country': [''],\r\n        'Product_Division': [''],\r\n        'Incoterm1': [''],\r\n        'Customer_Group': [''],\r\n        'Beam_Category': [''],\r\n        'Delivering_Mill': [''],\r\n        'Document_Item_Currency': [''],\r\n        'Amount': [''],\r\n        'Currency': [''],\r\n        'id': ['']\r\n      })\r\n    }\r\n    this.patchValue()\r\n  }\r\n  patchValue() {\r\n    console.log(this.data)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.get_request_Param(this.apiStringURL.get, { id: this.data.content.id }).subscribe((result) => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      let resultData: any = result\r\n      this.editIncotermExceptionsClick.patchValue({\r\n        Market_Country: resultData.record[0].Market_Country,\r\n        Product_Division: resultData.record[0].Product_Division,\r\n        Incoterm1: resultData.record[0].Incoterm1,\r\n        Customer_Group: resultData.record[0].Customer_Group,\r\n        Beam_Category: resultData.record[0].Beam_Category,\r\n        Delivering_Mill: resultData.record[0].Delivering_Mill,\r\n        Document_Item_Currency: resultData.record[0].Document_Item_Currency,\r\n        Amount: resultData.record[0].Amount,\r\n        Currency: resultData.record[0].Currency,\r\n        id_value: this.data.content.id\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching bace price addition')\r\n      this.closeModel()\r\n    })\r\n\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n\r\n  }\r\n  editRecord() {\r\n    console.group(this.editIncotermExceptionsClick.value)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.apiStringURL.update+'?id='+this.data.content.id, this.editIncotermExceptionsClick.value).subscribe(result => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', ' Record successfully updated')\r\n      this.closeModel()\r\n    }, error => {\r\n      console.log(error)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while updating bace price addition')\r\n      // this.closeModel()\r\n    })\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <form [formGroup]=\"editIncotermExceptionsClick\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Incoterm1</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Incoterm1\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Market Country</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Market_Country\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Amount\">\r\n                </mat-form-field>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Document Item Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Document_Item_Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Division</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Division\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Delivering Mill</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Delivering_Mill\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n               \r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Beam Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Beam_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n        </div>\r\n    </form>\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial (click)=\"editRecord()\">\r\n            Update\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { lengthProductionData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-length-production-list',\r\n  templateUrl: './length-production-list.component.html',\r\n  styleUrls: ['./length-production-list.component.scss']\r\n})\r\nexport class LengthProductionListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.length_production\r\n\r\n        this.displayedColumns = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Length', \r\n          'Length_From', \r\n          'Length_To',\r\n          'Document_Item_Currency',\r\n          'Country_Group',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.length_production_mini_bar\r\n        this.displayedColumns = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Length', \r\n          'Length_From', \r\n          'Length_To',\r\n          'Document_Item_Currency',\r\n          'Market_Customer',\r\n          'Customer_Group',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLengthProduction()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getLengthProduction() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<lengthProductionData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getLengthProduction()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getLengthProduction()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"length_production\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getLengthProduction()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"length_production\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getLengthProduction()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getLengthProduction()\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/length-production/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/length-production/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    Add Length Production\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    Upload Length Production\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    Download Length Production\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n                <ng-container matColumnDef=\"BusinessCode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                </ng-container>\r\n\r\n\r\n\r\n                <ng-container matColumnDef=\"Delivering_Mill\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivering Mill </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                    <ng-container matColumnDef=\"Country_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Country_Group}} </td>\r\n                    </ng-container>\r\n\r\n                </div>\r\n\r\n                <ng-template #mini_bar>\r\n                    <ng-container matColumnDef=\"Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n\r\n                </ng-template>\r\n\r\n                <ng-container matColumnDef=\"Length\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Length </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Length_From\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Length From </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Length_To\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Length To </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { lengthLogisticData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-length-logistic-list',\r\n  templateUrl: './length-logistic-list.component.html',\r\n  styleUrls: ['./length-logistic-list.component.scss']\r\n})\r\nexport class LengthLogisticListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.length_logistic\r\n        this.displayedColumns = [\r\n          'Country_Group',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Length', \r\n          'Length_From', \r\n          'Length_To',\r\n          'Transport_Mode',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.length_logistic_mini_bar\r\n\r\n        this.displayedColumns = [\r\n          'Customer_Group',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Length', \r\n          'Length_From', \r\n          'Length_To',\r\n          'Transport_Mode',\r\n          'Document_Item_Currency',\r\n          'Market_Customer',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLengthLogistic()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getLengthLogistic() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<lengthLogisticData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getLengthLogistic()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getLengthLogistic()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"length_logistic\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getLengthLogistic()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"length_logistic\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getLengthLogistic()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getLengthLogistic()\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/length-logistic/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/length-logistic/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    Add Length Logistic\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    Upload Length Logistic\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    Download Length Logistic\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n                <ng-container matColumnDef=\"Country_Group\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Country Group </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Country_Group}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Customer_Group\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Delivering_Mill\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivering Mill </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]==='mini-bar'\">\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Length\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Length </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Length_From\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Length From </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Length_To\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Length To </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Transport_Mode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Transport Mode </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-history-modal',\r\n  templateUrl: './history-modal.component.html',\r\n  styleUrls: ['./history-modal.component.scss']\r\n})\r\nexport class HistoryModalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>history-modal works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SmbRoutingModule } from './smb-routing.module';\r\nimport { SmbComponent } from './smb.component';\r\nimport { BasePriceAdditionListComponent } from './base-price/base-price-addition-list/base-price-addition-list.component';\r\nimport { EditBasePriceAdditionComponent } from './base-price/edit-base-price-addition/edit-base-price-addition.component';\r\nimport { BulkUploadBasePriceAdditionComponent } from './base-price/bulk-upload-base-price-addition/bulk-upload-base-price-addition.component';\r\nimport { MaterialsModule } from 'src/app/materials/materials.module';\r\nimport { EditPopupComponent } from './smb-modal/edit-popup/edit-popup.component';\r\nimport { WarnPopupComponent } from './smb-modal/warn-popup/warn-popup.component';\r\nimport { DeliveryMillListComponent } from './delivery-mill-list/delivery-mill-list.component';\r\nimport { ExtraCertificateListComponent } from './extra-certificate-list/extra-certificate-list.component';\r\nimport { FreightParityListComponent } from './freight-parity-list/freight-parity-list.component';\r\nimport { GradeListComponent } from './grade-list/grade-list.component';\r\nimport { LengthLogisticListComponent } from './length-logistic-list/length-logistic-list.component';\r\nimport { LengthProductionListComponent } from './length-production-list/length-production-list.component';\r\nimport { ProfileListComponent } from './profile-list/profile-list.component';\r\nimport { ProfileLberiaItalyListComponent } from './profile-lberia-italy-list/profile-lberia-italy-list.component';\r\nimport { TransportModeListComponent } from './transport-mode-list/transport-mode-list.component';\r\nimport { IncotermExceptionsListComponent } from './incoterm-exceptions/incoterm-exceptions-list/incoterm-exceptions-list.component';\r\nimport { IncotermExceptionsUploadComponent } from './incoterm-exceptions/incoterm-exceptions-upload/incoterm-exceptions-upload.component';\r\nimport { IncotermExceptionsEditComponent } from './incoterm-exceptions/incoterm-exceptions-edit/incoterm-exceptions-edit.component';\r\nimport { UploadValidateModalComponent } from './smb-modal/upload-validate-modal/upload-validate-modal.component';\r\nimport { AddPopupComponent } from './smb-modal/add-popup/add-popup.component';\r\nimport { HistoryModalComponent } from './smb-modal/history-modal/history-modal.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SmbComponent,\r\n    BasePriceAdditionListComponent,\r\n    EditBasePriceAdditionComponent,\r\n    BulkUploadBasePriceAdditionComponent,\r\n    WarnPopupComponent,\r\n    EditPopupComponent,\r\n    DeliveryMillListComponent,\r\n    ExtraCertificateListComponent,\r\n    FreightParityListComponent,\r\n    GradeListComponent,\r\n    LengthLogisticListComponent,\r\n    LengthProductionListComponent,\r\n    ProfileListComponent,\r\n    ProfileLberiaItalyListComponent,\r\n    TransportModeListComponent,\r\n    IncotermExceptionsListComponent,\r\n    IncotermExceptionsUploadComponent,\r\n    IncotermExceptionsEditComponent,\r\n    UploadValidateModalComponent,\r\n    AddPopupComponent,\r\n    HistoryModalComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SmbRoutingModule,\r\n    MaterialsModule\r\n  ]\r\n})\r\nexport class SmbModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-add-popup',\r\n  templateUrl: './add-popup.component.html',\r\n  styleUrls: ['./add-popup.component.scss']\r\n})\r\nexport class AddPopupComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  updateRecord: any = FormGroup\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n\r\n    if (this.data.fileName === 'price_addition') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.smb_mini_bar : this.apiString.smb\r\n    } else if (this.data.fileName === 'incoterm_exceptions') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.incoterm_exceptions_mini_bar : this.apiString.incoterm_exceptions\r\n    } else if (this.data.fileName === 'certificate') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.certificate_mini_bar : this.apiString.certificate\r\n    } else if (this.data.fileName === 'freight_parity') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.freight_parity_mini_bar : this.apiString.freight_parity\r\n    } else if (this.data.fileName === 'grade') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.grade_mini_bar : this.apiString.grade\r\n    } else if (this.data.fileName === 'length_logistic') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.length_logistic_mini_bar : this.apiString.length_logistic\r\n    } else if (this.data.fileName === 'length_production') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.length_production_mini_bar : this.apiString.length_production\r\n    } else if (this.data.fileName === 'profile') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.profile_mini_bar : this.apiString.profile\r\n    } else if (this.data.fileName === 'profile_lberia_italy') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.profile_lberia_italy_mini_bar : this.apiString.profile_lberia_italy\r\n    } else if (this.data.fileName === 'transport_mode') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.transport_mode_mini_bar : this.apiString.transport_mode\r\n    } else {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.delivery_mill_mini_bar : this.apiString.delivery_mill\r\n\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.url, this.data)\r\n    var objects: any = {};\r\n    this.data.fieldValue.forEach((element: any, index: any) => {\r\n      objects[element] = []\r\n      if (index === this.data.fieldValue.length - 1) {\r\n        objects['id'] = []\r\n      }\r\n    });\r\n    console.log(objects)\r\n    this.updateRecord = this.fb.group(objects)\r\n    console.log(this.updateRecord)\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n  }\r\n\r\n  addRecord(): any {\r\n    console.log(this.data.addURL)\r\n    let formInputValue = Object.keys(this.updateRecord.value).some(k => !!this.updateRecord.value[k])\r\n    if (formInputValue === false) {\r\n      return false;\r\n    } else {\r\n      delete this.updateRecord.value.action\r\n      console.group(this.updateRecord.value)\r\n      this.loadingRouteConfig = true\r\n      this.apiMethod.post_request(this.data.addURL, this.updateRecord.value).subscribe(result => {\r\n        console.log(result)\r\n        this.loadingRouteConfig = false\r\n        this.apiMethod.popupMessage('success', ' Record successfully Added.')\r\n        this.closeModel()\r\n      }, error => {\r\n        console.log(error)\r\n        this.loadingRouteConfig = false\r\n        this.apiMethod.popupMessage('error', 'Error while updating bace price addition')\r\n        // this.closeModel()\r\n      })\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <form [formGroup]=\"updateRecord\">\r\n        <div class=\"row\">\r\n            <div *ngIf=\"this.data?.type === 'miniBar';else sample\">\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    \r\n                    (data?.fileName==='price_addition') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Beam Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Beam_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n                \r\n\r\n\r\n                <div class=\"w-50\" *ngIf=\"!(\r\n                    (data?.fileName==='delivery_mill') || \r\n                    (data?.fileName==='freight_parity') || \r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Business Code</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"BusinessCode\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"!(\r\n                    (data?.fileName==='price_addition') || \r\n                    (data?.fileName==='certificate') ||\r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Delivering Mill</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Delivering_Mill\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='delivery_mill') ||\r\n                    (data?.fileName==='freight_parity') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Division</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Division\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='certificate') ||\r\n                    (data?.fileName==='price_addition') ||\r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='length-logistic') ||\r\n                    (data?.fileName==='length-production') ||\r\n                    (data?.fileName==='profile') \r\n\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='delivery_mill') ||\r\n                    (data?.fileName==='freight_parity') ||\r\n                    (data?.fileName==='profile_lberia_italy') ||\r\n                    (data?.fileName==='transport_mode') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Market Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Market_Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Market Customer</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Market_Customer\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='certificate') ||\r\n                    (data?.fileName==='grade') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Grade Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Grade_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='profile_lberia_italy')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 02</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_02\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='profile') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 04</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_04\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='profile_lberia_italy')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 05</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_05\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='transport_mode')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Transport Mode</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Transport_Mode\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(data?.fileName==='certificate')\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Certificate</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Certificate\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='freight_parity') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Zip Code Dest</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Zip_Code_Dest\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length From</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length_From\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length To</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length_To\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n               \r\n            </div>\r\n            <!-- ========================== simple design ================================= -->\r\n\r\n            <ng-template #sample>\r\n                <div class=\"w-50\" *ngIf=\"!(\r\n                    (data?.fileName==='freight_parity') || \r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='incoterm_exceptions') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Business Code</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"BusinessCode\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"!(\r\n                    (data?.fileName==='price_addition') || \r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Delivering Mill</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Delivering_Mill\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='price_addition') || \r\n                    (data?.fileName==='delivery_mill') ||\r\n                    (data?.fileName==='freight_parity') ||\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='transport_mode') ||\r\n                    (data?.fileName==='incoterm_exceptions') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Division</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Division\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='certificate') ||\r\n                    (data?.fileName==='grade') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Grade Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Grade_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(data?.fileName==='incoterm_exceptions')\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='price_addition') ||\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='profile_lberia_italy') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 02</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_02\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='profile') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 04</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_04\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='profile_lberia_italy')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 05</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_05\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='transport_mode')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Transport Mode</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Transport_Mode\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Country_Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Country_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='freight_parity') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Zip_Code_Dest</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Zip_Code_Dest\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='certificate') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Certificate</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Certificate\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='delivery_mill') ||\r\n                    (data?.fileName==='incoterm_exceptions') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Beam Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Beam_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(data?.fileName==='incoterm_exceptions')\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>incoterm1</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Incoterm1\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length From</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length_From\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"w-50\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length To</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length_To\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </ng-template>\r\n\r\n            <!--=====================================simple design end ===============================  -->\r\n\r\n            <!-- ====================================common for  all   =================================-->\r\n            <div>\r\n\r\n                <div class=\"w-50\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Document Item Currency</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Document_Item_Currency\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Market Country</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Market_Country\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Currency</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Currency\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"w-50\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Amount</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Amount\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" (click)=\"addRecord()\">\r\n            Add\r\n            <span *ngIf=\"data.fileName.split('_').length===1\" style=\"text-transform: capitalize;\">\r\n                {{data.fileName.split('_')[0]}}\r\n            </span>\r\n            <span *ngIf=\"data.fileName.split('_').length===2\" style=\"text-transform: capitalize;\">\r\n                {{data.fileName.split('_')[0] +' '+ data.fileName.split('_')[1]}}\r\n            </span>\r\n            <span *ngIf=\"data.fileName.split('_').length===3\" style=\"text-transform: capitalize;\">\r\n                {{data.fileName.split('_')[0] +' '+ data.fileName.split('_')[1] +' '+ data.fileName.split('_')[2]}}\r\n            </span>\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as _ from 'lodash';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { basePriceAddtionData } from '../../smb-interface.service';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-bulk-upload-base-price-addition',\r\n  templateUrl: './bulk-upload-base-price-addition.component.html',\r\n  styleUrls: ['./bulk-upload-base-price-addition.component.scss']\r\n})\r\nexport class BulkUploadBasePriceAdditionComponent implements OnInit {\r\n\r\n  loading: boolean = false\r\n  uploadBasePriceAddition: string[] = [];\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  tab: any;\r\n  table_data: any;\r\n  data: any = { \"inputaction\": '' };\r\n  alloyBasePriceAddition: any;\r\n\r\n  selectedFiles: any = { \"alloyBasePriceAddition\": { file: '', uploadCompleted: false } };\r\n  loadingRouteConfig: boolean = false\r\n  fileEv: any;\r\n  SelectedTab: any;\r\n  alloyBasePriceAddition_data: any;\r\n  url: any;\r\n  apiStringURL: any;\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private location: Location,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.smb\r\n        this.uploadBasePriceAddition = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Product_Division',\r\n          'Product_Level_02',\r\n          'document_item_currency',\r\n          'Amount',\r\n          'Currency'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.smb_mini_bar\r\n        this.uploadBasePriceAddition = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Customer_Group',\r\n          'Market_Customer',\r\n          'Beam_Category',\r\n          'document_item_currency',\r\n          'Amount',\r\n          'Currency'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data = { \"inputaction\": '' }\r\n  }\r\n\r\n\r\n  // ==================== file change event ========================\r\n  dropFiles(ev: any): any {\r\n\r\n    ev.preventDefault();\r\n    this.fileEv = ev\r\n    let data: any = ev.dataTransfer.items[0]\r\n    console.log(data)\r\n    if (data) {\r\n      console.log(\"coming inside\")\r\n      // If dropped items aren't files, reject them\r\n      const allowed_types = [\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n\r\n      if (!_.includes(allowed_types, data.type)) {\r\n        let imageError: any = 'Only xlsx are allowed.';\r\n        this._snackBar.open(imageError, \"\", {\r\n          duration: 4000,\r\n          panelClass: ['error'],\r\n          horizontalPosition: 'end',\r\n          verticalPosition: 'bottom',\r\n        });\r\n        return false;\r\n      }\r\n      let obj: any\r\n      if (data.kind === 'file') {\r\n        let file = data.getAsFile();\r\n        obj = {\r\n          fileName: file.name,\r\n          selectedFile: file,\r\n        }\r\n      }\r\n      this.selectedFiles.alloyBasePriceAddition = {\r\n        file: obj,\r\n        uploadCompleted: true\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  dragOverHandler(ev: any) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    this.fileEv = event\r\n    console.log(event.target.files)\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        let file: any = event.target.files[i]\r\n        console.log(file)\r\n\r\n        let obj: any = {\r\n          fileName: file.name,\r\n          selectedFile: file\r\n        }\r\n        this.selectedFiles.alloyBasePriceAddition = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n        // this.selectedFiles.push(obj);\r\n        reader.onload = (event: any) => {\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n        event.target.value = ''\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFile() {\r\n\r\n    this.alloyBasePriceAddition = ''\r\n    this.selectedFiles.alloyBasePriceAddition = {\r\n      file: \"\",\r\n      uploadCompleted: false\r\n    }\r\n    console.log(this.fileEv, \"FILE EV \")\r\n    // this.fileEv.target.value = \"\";\r\n  }\r\n  uploadFiles() {\r\n    const formData = new FormData();\r\n    formData.append(\"filename\", this.selectedFiles.alloyBasePriceAddition.file.selectedFile)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.apiStringURL.upload, formData).subscribe((data) => {\r\n      console.log(data)\r\n      let resultData: any = data\r\n      this.loadingRouteConfig = false\r\n      this.alloyBasePriceAddition_data = resultData\r\n      this.alloyBasePriceAddition = new MatTableDataSource<basePriceAddtionData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.alloyBasePriceAddition.paginator = this.paginator;\r\n        this.alloyBasePriceAddition.sort = this.sort;\r\n      });\r\n      this.apiMethod.popupMessage('success', 'File data read successfully')\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while reading uploaded file')\r\n    })\r\n  }\r\n\r\n  //==========================end===================================\r\n  //filter \r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.alloyBasePriceAddition.filter = filterValue.trim().toLowerCase();\r\n    if (this.alloyBasePriceAddition.paginator) {\r\n      this.alloyBasePriceAddition.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  //data validate\r\n  validateDataForm() {\r\n    let data: any = {\r\n      \"billet\": this.alloyBasePriceAddition_data.data,\r\n      \"filename\": this.alloyBasePriceAddition_data.filename\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.apiStringURL.validate, data).subscribe((result: any) => {\r\n      console.log(\"success\")\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', 'File validated successfully')\r\n      this.router.navigate(['/smb/base-price/list'])\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while validating uploaded file')\r\n    })\r\n  }\r\n  back() {\r\n    this.location.back()\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<mat-card>\r\n    <!-- ========================file upload start here==========================  -->\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"text-left mt-10 mb-10\">\r\n                    <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                        <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                        Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row bg-w\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                <div class=\"mtb-10\">\r\n                    <div class=\"height-100\">\r\n                        <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                            (dragover)='dragOverHandler($event)'>\r\n                            <div class=\"pointCenter\">\r\n                                <div class=\"card-drag\">\r\n                                    <span class=\"header\">\r\n                                        you can drag & drop your file here .. <br>\r\n                                        OR\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                        [disabled]=\"selectedFiles.alloyBasePriceAddition.file!=''\"\r\n                                        (click)=\"fileInput2.click()\">\r\n                                        Choose file\r\n                                    </button>\r\n                                    <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2 id=\"file\"\r\n                                        accept=\".xls, .xlsx\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <mat-list>\r\n                                <mat-list-item *ngIf=\"selectedFiles.alloyBasePriceAddition.uploadCompleted\">\r\n                                    <mat-icon mat-list-icon>note</mat-icon>\r\n                                    <div mat-line>{{selectedFiles.alloyBasePriceAddition.file?.fileName}}</div>\r\n\r\n                                    <div>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"uploadFiles()\">\r\n                                            <mat-icon>upload</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" (click)=\"deleteFile()\">\r\n                                            <mat-icon>delete_forever</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                    <mat-divider></mat-divider>\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- ========================file upload end ========================= -->\r\n    <div class=\"row\" *ngIf=\"alloyBasePriceAddition && (selectedFiles.alloyBasePriceAddition.file)\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"validateDataForm()\">\r\n                    Validate Alloy Surcharge Wire\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"alloyBasePriceAddition && (selectedFiles.alloyBasePriceAddition.file)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <table mat-table [dataSource]=\"alloyBasePriceAddition\" class=\"custom_table order_table\" matSort>\r\n\r\n                    <ng-container matColumnDef=\"BusinessCode\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                    </ng-container>\r\n    \r\n                    <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n    \r\n                        <ng-container matColumnDef=\"Product_Division\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header>Product Division </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                        </ng-container>\r\n    \r\n                        <ng-container matColumnDef=\"Product_Level_02\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 02 </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                        </ng-container>\r\n    \r\n                    </div>\r\n    \r\n                    <ng-template #mini_bar>\r\n                        <ng-container matColumnDef=\"Customer_Group\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                        </ng-container>\r\n                        <ng-container matColumnDef=\"Market_Customer\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                        </ng-container>\r\n    \r\n                        <ng-container matColumnDef=\"Beam_Category\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Beam Category </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                        </ng-container>\r\n                    </ng-template>\r\n    \r\n                    <ng-container matColumnDef=\"Market_Country\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                    </ng-container>\r\n    \r\n                    <ng-container matColumnDef=\"document_item_currency\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.document_item_currency}} </td>\r\n                    </ng-container>\r\n    \r\n                    <ng-container matColumnDef=\"Amount\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                    </ng-container>\r\n    \r\n                    <ng-container matColumnDef=\"Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"uploadBasePriceAddition\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: uploadBasePriceAddition;\"></tr>\r\n\r\n\r\n                </table>\r\n                <!-- <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\"\r\n                    #paginators (page)=\"pageEvent = pageChangeCall($event)\">\r\n                </mat-paginator> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { profileLberiaItaly } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-profile-lberia-italy-list',\r\n  templateUrl: './profile-lberia-italy-list.component.html',\r\n  styleUrls: ['./profile-lberia-italy-list.component.scss']\r\n})\r\nexport class ProfileLberiaItalyListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.profile_lberia_italy\r\n        this.displayedColumns = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Product_Level_02',\r\n          'Product_Level_05',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.profile_lberia_italy_mini_bar\r\n\r\n        this.displayedColumns =\r\n          [\r\n            'BusinessCode',\r\n            'Market_Country',\r\n            'Delivering_Mill',\r\n            'Product_Level_02',\r\n            'Product_Level_05',\r\n            'Document_Item_Currency',\r\n            'Market_Customer',\r\n            'Market_Customer_Group',\r\n            'Amount',\r\n            'Currency',\r\n            'action'\r\n          ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfileLberiaItaly()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getProfileLberiaItaly() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<profileLberiaItaly>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getProfileLberiaItaly()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getProfileLberiaItaly()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"profile_lberia_italy\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getProfileLberiaItaly()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"profile_lberia_italy\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getProfileLberiaItaly()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getProfileLberiaItaly()\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/profile-lberia-italy/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/profile-lberia-italy/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    Add Profile Iberia & Italy\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    Upload Profile Iberia & Italy\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    Download Profile Iberia & Italy\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n\r\n                <ng-container matColumnDef=\"BusinessCode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Product_Level_02\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 02 </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Product_Level_05\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 05 </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Delivering_Mill\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivering Mill </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]==='mini-bar'\">\r\n                    <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n\r\n                </div>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { basePriceAddtionData } from '../../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { EditBasePriceAdditionComponent } from '../edit-base-price-addition/edit-base-price-addition.component';\r\nimport { WarnPopupComponent } from '../../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AddPopupComponent } from '../../smb-modal/add-popup/add-popup.component';\r\n@Component({\r\n  selector: 'app-base-price-addition-list',\r\n  templateUrl: './base-price-addition-list.component.html',\r\n  styleUrls: ['./base-price-addition-list.component.scss']\r\n})\r\nexport class BasePriceAdditionListComponent implements OnInit {\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private _snackBar: MatSnackBar,\r\n    private popup: MatDialog,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.smb\r\n        this.displayedColumns = ['BusinessCode', 'Market_Country','Product_Division', 'Product_Level_02', 'Document_Item_Currency', 'Amount', 'Currency', \"action\"]\r\n      } else {\r\n        this.apiStringURL = this.apiString.smb_mini_bar\r\n        this.displayedColumns = ['BusinessCode', 'Market_Country','Customer_Group', 'Market_Customer', 'Beam_Category', 'Document_Item_Currency', 'Amount', 'Currency', \"action\"]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getBasePriceAddition()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getBasePriceAddition() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<basePriceAddtionData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getBasePriceAddition()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    const filterValue = this.searchValue;\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getBasePriceAddition()\r\n  }\r\n  basePriceClick(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"price_addition\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getBasePriceAddition()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditBasePriceAdditionComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'edit-min-bar' : 'edit'\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getBasePriceAddition()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getBasePriceAddition()\r\n      })\r\n\r\n    }\r\n  }\r\n  uploadSmbBasePrice() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/base-price/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/base-price/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadBasePriceAddition() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button\r\n                    (click)=\"basePriceClick('','add')\">\r\n                    Add Price Addition\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadSmbBasePrice()\">\r\n                    Upload Price Addition\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadBasePriceAddition()\">\r\n                    Download Price Addition\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n                <ng-container matColumnDef=\"BusinessCode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                    <ng-container matColumnDef=\"Product_Division\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Product Division </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Product_Level_02\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 02 </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                    </ng-container>\r\n\r\n                </div>\r\n\r\n                <ng-template #mini_bar>\r\n                    <ng-container matColumnDef=\"Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Beam_Category\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Beam Category </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                    </ng-container>\r\n                </ng-template>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"basePriceClick(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"basePriceClick(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","export const rowData = [{\r\n    'BusinessCode': 'test-data-1',\r\n    'Market_Country': 'test-data-2',\r\n    'Document_Item_Currency': 'test-data-3',\r\n    'Amount': 'test-data-4',\r\n    'Currency': 'test-data-5',\r\n    'Delivering_Mill': 'test-data-6',\r\n    'Product_Division': 'test-data-7',\r\n    'Market_Customer': 'test-data-8',\r\n    'Market_Customer_Group': 'test-data-9',\r\n    'Grade_Category': 'test-data-10',\r\n    'Product_Level_02': 'test-data-11',\r\n    'Product_Level_04': 'test-data-12',\r\n    'Product_Level_05': 'test-data-13',\r\n    'Transport_Mode': 'test-data-14',\r\n    'Length': 'test-data-15',\r\n    'Country_Group': 'test-data-16',\r\n    'Zip_Code_Dest': 'test-data-17',\r\n    'Certificate': 'test-data-20',\r\n    'Beam_Category': 'test-data-21',\r\n    \"id_value\": 12\r\n}]","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as _ from 'lodash';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { basePriceAddtionData } from '../../smb-interface.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-incoterm-exceptions-upload',\r\n  templateUrl: './incoterm-exceptions-upload.component.html',\r\n  styleUrls: ['./incoterm-exceptions-upload.component.scss']\r\n})\r\nexport class IncotermExceptionsUploadComponent implements OnInit {\r\n  loading: boolean = false\r\n  displayedColumns: string[] = [];\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  tab: any;\r\n  table_data: any;\r\n  data: any = { \"inputaction\": '' };\r\n  incoterm_exceptions: any;\r\n\r\n  selectedFiles: any = { \"incoterm_exceptions\": { file: '', uploadCompleted: false } };\r\n  loadingRouteConfig: boolean = false\r\n  fileEv: any;\r\n  SelectedTab: any;\r\n  incoterm_exceptions_data: any;\r\n  url: any;\r\n  apiStringURL: any;\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private location: Location,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.smb\r\n        this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n\r\n      } else {\r\n        this.apiStringURL = this.apiString.smb_mini_bar\r\n        this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data = { \"inputaction\": '' }\r\n  }\r\n\r\n\r\n  // ==================== file change event ========================\r\n  dropFiles(ev: any): any {\r\n\r\n    ev.preventDefault();\r\n    this.fileEv = ev\r\n    let data: any = ev.dataTransfer.items[0]\r\n    console.log(data)\r\n    if (data) {\r\n      console.log(\"coming inside\")\r\n      // If dropped items aren't files, reject them\r\n      const allowed_types = [\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n\r\n      if (!_.includes(allowed_types, data.type)) {\r\n        let imageError: any = 'Only xlsx are allowed.';\r\n        this._snackBar.open(imageError, \"\", {\r\n          duration: 4000,\r\n          panelClass: ['error'],\r\n          horizontalPosition: 'end',\r\n          verticalPosition: 'bottom',\r\n        });\r\n        return false;\r\n      }\r\n      let obj: any\r\n      if (data.kind === 'file') {\r\n        let file = data.getAsFile();\r\n        obj = {\r\n          fileName: file.name,\r\n          selectedFile: file,\r\n        }\r\n      }\r\n      this.selectedFiles.incoterm_exceptions = {\r\n        file: obj,\r\n        uploadCompleted: true\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  dragOverHandler(ev: any) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    this.fileEv = event\r\n    console.log(event.target.files)\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        let file: any = event.target.files[i]\r\n        console.log(file)\r\n\r\n        let obj: any = {\r\n          fileName: file.name,\r\n          selectedFile: file\r\n        }\r\n        this.selectedFiles.incoterm_exceptions = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n        // this.selectedFiles.push(obj);\r\n        reader.onload = (event: any) => {\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n        event.target.value = ''\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFile() {\r\n\r\n    this.incoterm_exceptions = ''\r\n    this.selectedFiles.incoterm_exceptions = {\r\n      file: \"\",\r\n      uploadCompleted: false\r\n    }\r\n    console.log(this.fileEv, \"FILE EV \")\r\n    // this.fileEv.target.value = \"\";\r\n  }\r\n  uploadFiles() {\r\n    const formData = new FormData();\r\n    formData.append(\"filename\", this.selectedFiles.incoterm_exceptions.file.selectedFile)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.apiStringURL.incoterm_exceptions_upload, formData).subscribe((data) => {\r\n      console.log(data)\r\n      let resultData: any = data\r\n      this.loadingRouteConfig = false\r\n      this.incoterm_exceptions_data = resultData\r\n      this.incoterm_exceptions = new MatTableDataSource<basePriceAddtionData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.incoterm_exceptions.paginator = this.paginator;\r\n        this.incoterm_exceptions.sort = this.sort;\r\n      });\r\n      this.apiMethod.popupMessage('success', 'File data read successfully')\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while reading uploaded file')\r\n    })\r\n  }\r\n\r\n  //==========================end===================================\r\n  //filter \r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.incoterm_exceptions.filter = filterValue.trim().toLowerCase();\r\n    if (this.incoterm_exceptions.paginator) {\r\n      this.incoterm_exceptions.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  //data validate\r\n  validateDataForm() {\r\n    let data: any = {\r\n      \"Incoterm_Exceptions\": this.incoterm_exceptions_data.data,\r\n      \"filename\": this.incoterm_exceptions_data.filename\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.apiStringURL.incoterm_exceptions_validate, data).subscribe((result: any) => {\r\n      console.log(\"success\")\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', 'File validated successfully')\r\n      this.back()\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while validating uploaded file')\r\n    })\r\n  }\r\n  back() {\r\n    this.location.back()\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<mat-card>\r\n    <!-- ========================file upload start here==========================  -->\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"text-left mt-10 mb-10\">\r\n                    <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                        <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                        Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row bg-w\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                <div class=\"mtb-10\">\r\n                    <div class=\"height-100\">\r\n                        <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                            (dragover)='dragOverHandler($event)'>\r\n                            <div class=\"pointCenter\">\r\n                                <div class=\"card-drag\">\r\n                                    <span class=\"header\">\r\n                                        you can drag & drop your file here .. <br>\r\n                                        OR\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                        [disabled]=\"selectedFiles.incoterm_exceptions.file!=''\"\r\n                                        (click)=\"fileInput2.click()\">\r\n                                        Choose file\r\n                                    </button>\r\n                                    <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2 id=\"file\"\r\n                                        accept=\".xls, .xlsx\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <mat-list>\r\n                                <mat-list-item *ngIf=\"selectedFiles.incoterm_exceptions.uploadCompleted\">\r\n                                    <mat-icon mat-list-icon>note</mat-icon>\r\n                                    <div mat-line>{{selectedFiles.incoterm_exceptions.file?.fileName}}</div>\r\n\r\n                                    <div>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"uploadFiles()\">\r\n                                            <mat-icon>upload</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" (click)=\"deleteFile()\">\r\n                                            <mat-icon>delete_forever</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                    <mat-divider></mat-divider>\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- ========================file upload end ========================= -->\r\n    <div class=\"row\" *ngIf=\"incoterm_exceptions && (selectedFiles.incoterm_exceptions.file)\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"validateDataForm()\">\r\n                    Validate Alloy Surcharge Wire\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"incoterm_exceptions && (selectedFiles.incoterm_exceptions.file)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <table mat-table [dataSource]=\"incoterm_exceptions\" class=\"custom_table order_table\" matSort>\r\n\r\n                    <ng-container matColumnDef=\"Market_Country\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Country </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Product_Division\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Product Division </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Incoterm1\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Incoterm1 </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Incoterm1}} </td>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Beam_Category\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Beam Category </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"Delivering_Mill\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivering Mill </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Cur</th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Amount\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                    <tr class=\"mat-row\" *matNoDataRow>\r\n                        <td class=\"mat-cell\" colspan=\"4\">No Record Found !\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n                <!-- <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\"\r\n                    #paginators (page)=\"pageEvent = pageChangeCall($event)\">\r\n                </mat-paginator> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-card>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { profileData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-profile-list',\r\n  templateUrl: './profile-list.component.html',\r\n  styleUrls: ['./profile-list.component.scss']\r\n})\r\nexport class ProfileListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.profile\r\n        this.displayedColumns = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Product_Division',\r\n          'Product_Level_04',\r\n          'Product_Level_05',\r\n          'Product_Level_02',\r\n          'Delivering_Mill',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.profile_mini_bar\r\n        this.displayedColumns = [\r\n          'BusinessCode',\r\n          'Market_Country',\r\n          'Product_Level_04',\r\n          'Product_Level_05',\r\n          'Product_Level_02',\r\n          'Delivering_Mill',\r\n          'Customer_Group',\r\n          'Market_Customer',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfile()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getProfile() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<profileData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getProfile()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getProfile()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"profile\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getProfile()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"profile\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getProfile()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getProfile()\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/profile/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/profile/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    Add Extra Profile\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    Upload Extra Profile\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    Download Extra Profile\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n                <ng-container matColumnDef=\"BusinessCode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Product_Level_02\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 02 </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Product_Level_04\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 04 </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_04}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Product_Level_05\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 05 </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"Delivering_Mill\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivering Mill </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n                    <ng-container matColumnDef=\"Product_Division\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Division </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                    </ng-container>\r\n                </div>\r\n                <ng-template #mini_bar>\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                    </ng-container>\r\n                </ng-template>\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { freightParityData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { rowData } from 'src/app/sample';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-freight-parity-list',\r\n  templateUrl: './freight-parity-list.component.html',\r\n  styleUrls: ['./freight-parity-list.component.scss']\r\n})\r\nexport class FreightParityListComponent implements OnInit {\r\n  data: any = rowData\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.freight_parity\r\n        this.displayedColumns = [\r\n          \"Delivering_Mill\",\r\n          \"Market_Country\",\r\n          \"Zip_Code_Dest\",\r\n          \"Product_Division\",\r\n          \"Document_Item_Currency\",\r\n          \"Amount\",\r\n          \"Currency\",\r\n          \"action\"\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.freight_parity_mini_bar\r\n        this.displayedColumns = [\r\n          \"Delivering_Mill\",\r\n          \"Market_Country\",\r\n          \"Zip_Code_Dest\",\r\n          \"Product_Division\",\r\n          \"Document_Item_Currency\",\r\n          \"Amount\",\r\n          \"Currency\",\r\n          \"Market_Customer\",\r\n          \"Market_Customer_Group\",\r\n          \"action\"\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFreightParity()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getFreightParity() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.dataSource = new MatTableDataSource<freightParityData>(this.data)\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<freightParityData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getFreightParity()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getFreightParity()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"freight_parity\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getFreightParity()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"freight_parity\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getFreightParity()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getFreightParity()\r\n      })\r\n    }\r\n  }\r\n  uploadFreightParity() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/freight-parity/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/freight-parity/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadFreightParity() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    Add Extra Freight Parity\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadFreightParity()\">\r\n                    Upload Extra Freight Parity\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadFreightParity()\">\r\n                    Download Extra Freight Parity\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n              \r\n                <ng-container matColumnDef=\"Product_Division\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Division </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Delivering_Mill\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Delivering Mill </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]==='mini-bar'\">\r\n                  \r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <ng-container matColumnDef=\"Zip_Code_Dest\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Zip Code (Dest) </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Zip_Code_Dest}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No Record Found !\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-popup',\r\n  templateUrl: './edit-popup.component.html',\r\n  styleUrls: ['./edit-popup.component.scss']\r\n})\r\nexport class EditPopupComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  updateRecord: any = FormGroup\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {\r\n\r\n    if (this.data.fileName === 'smb') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.smb_mini_bar : this.apiString.smb\r\n    } else if (this.data.fileName === 'incoterm_exceptions') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.incoterm_exceptions_mini_bar : this.apiString.incoterm_exceptions\r\n    } else if (this.data.fileName === 'certificate') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.certificate_mini_bar : this.apiString.certificate\r\n    } else if (this.data.fileName === 'freight_parity') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.freight_parity_mini_bar : this.apiString.freight_parity\r\n    } else if (this.data.fileName === 'grade') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.grade_mini_bar : this.apiString.grade\r\n    } else if (this.data.fileName === 'length_logistic') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.length_logistic_mini_bar : this.apiString.length_logistic\r\n    } else if (this.data.fileName === 'length_production') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.length_production_mini_bar : this.apiString.length_production\r\n    } else if (this.data.fileName === 'profile') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.profile_mini_bar : this.apiString.profile\r\n    } else if (this.data.fileName === 'profile_lberia_italy') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.profile_lberia_italy_mini_bar : this.apiString.profile_lberia_italy\r\n    } else if (this.data.fileName === 'transport_mode') {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.transport_mode_mini_bar : this.apiString.transport_mode\r\n    } else {\r\n      this.apiStringURL = this.data.type === 'miniBar' ? this.apiString.delivery_mill_mini_bar : this.apiString.delivery_mill\r\n\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.url, this.data)\r\n    var objects: any = {};\r\n    this.data.fieldValue.forEach((element: any, index: any) => {\r\n      objects[element] = []\r\n      if (index === this.data.fieldValue.length - 1) {\r\n        objects['id'] = []\r\n      }\r\n    });\r\n    console.log(objects)\r\n    this.updateRecord = this.fb.group(objects)\r\n    console.log(this.updateRecord)\r\n    setTimeout(() => {\r\n      this.patchValue()\r\n    })\r\n  }\r\n  patchValue() {\r\n    this.updateRecord.patchValue(this.data.content)\r\n  }\r\n  closeModel() {\r\n    this.dialogRef.close()\r\n\r\n  }\r\n  editRecord() {\r\n    delete this.updateRecord.value.action\r\n    console.group(this.updateRecord.value)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.data.updateURL, this.updateRecord.value).subscribe(result => {\r\n      console.log(result)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', ' Record successfully updated')\r\n      this.closeModel()\r\n    }, error => {\r\n      console.log(error)\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while updating bace price addition')\r\n      // this.closeModel()\r\n    })\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div class=\"pd-card\">\r\n    <form [formGroup]=\"updateRecord\">\r\n        <div class=\"row\">\r\n            <div *ngIf=\"this.data?.type === 'miniBar';else sample\">\r\n\r\n                <div class=\"col-6\" *ngIf=\"!(\r\n                    (data?.fileName==='delivery_mill') || \r\n                    (data?.fileName==='freight_parity') || \r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Business Code</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"BusinessCode\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"!(\r\n                    (data?.fileName==='smb') || \r\n                    (data?.fileName==='certificate') ||\r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Delivering Mill</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Delivering_Mill\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='delivery_mill') ||\r\n                    (data?.fileName==='freight_parity') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Division</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Division\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"!(\r\n                    (data?.fileName==='delivery_mill') ||\r\n                    (data?.fileName==='freight_parity') ||\r\n                    (data?.fileName==='profile_lberia_italy') ||\r\n                    (data?.fileName==='transport_mode') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='delivery_mill') ||\r\n                    (data?.fileName==='freight_parity') ||\r\n                    (data?.fileName==='profile_lberia_italy') ||\r\n                    (data?.fileName==='transport_mode') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Market Customer Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Market_Customer_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Market Customer</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Market_Customer\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='certificate') ||\r\n                    (data?.fileName==='grade') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Grade Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Grade_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='profile_lberia_italy')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 02</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_02\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='profile') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 04</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_04\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='profile_lberia_italy')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 05</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_05\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='transport_mode')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Transport Mode</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Transport_Mode\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(data?.fileName==='certificate')\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Certificate</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Certificate\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='freight_parity') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Zip Code Dest</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Zip_Code_Dest\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length From</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length_From\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length To</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length_To\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <!-- ========================== simple design ================================= -->\r\n\r\n            <ng-template #sample>\r\n                <div class=\"col-6\" *ngIf=\"!(\r\n                    (data?.fileName==='freight_parity') || \r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Business Code</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"BusinessCode\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"!(\r\n                    (data?.fileName==='smb') || \r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='transport_mode') \r\n                )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Delivering Mill</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Delivering_Mill\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='smb') || \r\n                    (data?.fileName==='delivery_mill') ||\r\n                    (data?.fileName==='freight_parity') ||\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='transport_mode') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Division</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Division\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='certificate') ||\r\n                    (data?.fileName==='grade') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Grade Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Grade_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='smb') ||\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='profile_lberia_italy') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 02</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_02\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='profile') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 04</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_04\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='profile') ||\r\n                    (data?.fileName==='profile_lberia_italy')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Product Level 05</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Product_Level_05\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='transport_mode')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Transport Mode</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Transport_Mode\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='grade') ||\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Country_Group</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Country_Group\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='freight_parity') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Zip_Code_Dest</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Zip_Code_Dest\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='certificate') \r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Certificate</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Certificate\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='delivery_mill')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Beam Category</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Beam_Category\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length From</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length_From\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-6\" *ngIf=\"(\r\n                    (data?.fileName==='length_logistic') ||\r\n                    (data?.fileName==='length_production')\r\n                    )\">\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label>Length To</mat-label>\r\n                        <input matInput type=\"text\" formControlName=\"Length_To\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </ng-template>\r\n\r\n            <!--=====================================simple design end ===============================  -->\r\n\r\n            <!-- ====================================common for  all   =================================-->\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Document Item Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Document_Item_Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Market Country</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Market_Country\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Currency</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Currency\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-6\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input matInput type=\"text\" formControlName=\"Amount\">\r\n                </mat-form-field>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n    <div class=\" text-right\">\r\n        <button mat-stroked-button class=\"mr-10\" (click)=\"closeModel()\">\r\n            Close\r\n        </button>\r\n        <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"data\" cdkFocusInitial (click)=\"editRecord()\">\r\n            Update\r\n        </button>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { freightParityData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-delivery-mill-list',\r\n  templateUrl: './delivery-mill-list.component.html',\r\n  styleUrls: ['./delivery-mill-list.component.scss']\r\n})\r\nexport class DeliveryMillListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.delivery_mill\r\n        this.displayedColumns = [\r\n          'BusinessCode',\r\n          'Beam_Category',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Product_Division',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          \"action\"\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.delivery_mill_mini_bar\r\n        this.displayedColumns = [\r\n          'Market_Customer_Group',\r\n          'Market_Customer',\r\n          'Market_Country',\r\n          'Delivering_Mill',\r\n          'Product_Division',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          \"action\"\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDeliveryMill()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getDeliveryMill() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<freightParityData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getDeliveryMill()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getDeliveryMill()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"delivery_mill\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getDeliveryMill()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"delivery_mill\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getDeliveryMill()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getDeliveryMill()\r\n      })\r\n    }\r\n  }\r\n  uploadFreightParity() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/delivery-mill/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/delivery-mill/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadFreightParity() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    Add Delivery Mill\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadFreightParity()\">\r\n                    Upload Delivery Mill\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadFreightParity()\">\r\n                    Download Delivery Mill\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n                '',\r\n                'Beam Category',\r\n                'Market_Country',\r\n                'Delivering_Mill',\r\n                'Product_Division',\r\n\r\n                <ng-container matColumnDef=\"Product_Division\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Division </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Delivering_Mill\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Delivering Mill </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                </ng-container>\r\n                <div *ngIf=\"url[3]!='mini-bar'; else mini_bar\">\r\n\r\n                    <ng-container matColumnDef=\"BusinessCode\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Business Code </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Beam_Category\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Beam Category </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                    </ng-container>\r\n\r\n                </div>\r\n\r\n                <ng-template #mini_bar>\r\n\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                    </ng-container>\r\n                </ng-template>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No Record Found !\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport * as _ from 'lodash';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { basePriceAddtionData } from '../../smb-interface.service';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Location } from \"@angular/common\";\r\nimport { filter } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-upload-validate-modal',\r\n  templateUrl: './upload-validate-modal.component.html',\r\n  styleUrls: ['./upload-validate-modal.component.scss']\r\n})\r\nexport class UploadValidateModalComponent implements OnInit {\r\n\r\n  loading: boolean = false\r\n  displayedColumns: string[] = [];\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  tab: any;\r\n  table_data: any;\r\n  data: any = { \"inputaction\": '' };\r\n  uploadValidateModal: any;\r\n\r\n  selectedFiles: any = { \"uploadValidateModal\": { file: '', uploadCompleted: false } };\r\n  loadingRouteConfig: boolean = false\r\n  fileEv: any;\r\n  SelectedTab: any;\r\n  uploadValidateModal_data: any;\r\n  url: any;\r\n  apiStringURL: any;\r\n\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private _snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private location: Location,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[2] === 'base-price') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.smb_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Product_Division', 'Product_Level_02', 'document_item_currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.smb\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Product_Division', 'Product_Level_02', 'document_item_currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'incoterm-exceptions') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.incoterm_exceptions_mini_bar\r\n          this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.incoterm_exceptions\r\n          this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'extra-certificate') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.certificate_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Certificate', 'Market_Customer', 'Market_Country', 'Grade_Category', 'Customer_Group', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.certificate\r\n          this.displayedColumns = ['BusinessCode', 'Certificate', 'Grade_Category', 'Market_Country', 'Document_Item_Currency', 'Delivering_Mill', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'freight-parity') {\r\n        console.log(\"coming in  freight-parity\")\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.freight_parity_mini_bar\r\n          this.displayedColumns = [\"Delivering_Mill\", \"Market_Country\", \"Zip_Code_Dest\", \"Product_Division\", \"Document_Item_Currency\", \"Amount\", \"Currency\", \"Market_Customer\", \"Market_Customer_Group\"\r\n          ]\r\n        } else {\r\n          this.apiStringURL = this.apiString.freight_parity\r\n          this.displayedColumns = [\"Delivering_Mill\", \"Market_Country\", \"Zip_Code_Dest\", \"Product_Division\", \"Document_Item_Currency\", \"Amount\", \"Currency\",]\r\n        }\r\n\r\n      } else if (this.url[2] === 'grade') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.grade_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Grade_Category', 'Market_Country', 'Document_Item_Currency', 'Market_Customer', 'Customer_Group', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.grade\r\n          this.displayedColumns = ['BusinessCode', 'Grade_Category', 'Market_Country', 'Document_Item_Currency', 'Product_Division', 'Country_Group', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'length-logistic') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.length_logistic_mini_bar\r\n          this.displayedColumns = ['Country_Group', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Transport_Mode', 'Market_Customer', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.length_logistic\r\n          this.displayedColumns = ['Country_Group', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'length-production') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.length_production_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Market_Customer', 'Customer_Group', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.length_production\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Length', 'Length_From', 'Length_To', 'Document_Item_Currency', 'Country_Group', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'profile') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.profile_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Product_Level_04', 'Product_Level_05', 'Product_Level_02', 'Delivering_Mill', 'Customer_Group', 'Market_Customer', 'Document_Item_Currency', 'Amount', 'Currency',]\r\n        } else {\r\n          this.apiStringURL = this.apiString.profile\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Product_Division', 'Product_Level_04', 'Product_Level_05', 'Product_Level_02', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'profile-lberia-italy') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.profile_lberia_italy_mini_bar\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Product_Level_02', 'Product_Level_05', 'Document_Item_Currency', 'Market_Customer', 'Market_Customer_Group', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.profile_lberia_italy\r\n          this.displayedColumns = ['BusinessCode', 'Market_Country', 'Delivering_Mill', 'Product_Level_02', 'Product_Level_05', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else if (this.url[2] === 'transport-mode') {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.transport_mode_mini_bar\r\n          this.displayedColumns = ['Product_Division', 'Market_Country', 'Transport_Mode', 'Document_Item_Currency', 'Market_Customer_Group', 'Market_Customer', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.transport_mode\r\n          this.displayedColumns = ['Product_Division', 'Market_Country', 'Transport_Mode', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      } else {\r\n\r\n        if (this.url[3] === 'mini-bar') {\r\n          this.apiStringURL = this.apiString.delivery_mill_mini_bar\r\n          this.displayedColumns = ['Market_Customer_Group', 'Market_Customer', 'Market_Country', 'Delivering_Mill', 'Product_Division', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        } else {\r\n          this.apiStringURL = this.apiString.delivery_mill\r\n          this.displayedColumns = ['BusinessCode', 'Beam_Category', 'Market_Country', 'Delivering_Mill', 'Product_Division', 'Document_Item_Currency', 'Amount', 'Currency']\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data = { \"inputaction\": '' }\r\n  }\r\n\r\n\r\n  // ==================== file change event ========================\r\n  dropFiles(ev: any): any {\r\n    ev.preventDefault();\r\n    this.fileEv = ev\r\n    let data: any = ev.dataTransfer.items[0]\r\n    console.log(data)\r\n    if (data) {\r\n      console.log(\"coming inside\")\r\n      // If dropped items aren't files, reject them\r\n      const allowed_types = [\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\r\n\r\n      if (!_.includes(allowed_types, data.type)) {\r\n        let imageError: any = 'Only xlsx are allowed.';\r\n        this._snackBar.open(imageError, \"\", {\r\n          duration: 4000,\r\n          panelClass: ['error'],\r\n          horizontalPosition: 'end',\r\n          verticalPosition: 'bottom',\r\n        });\r\n        return false;\r\n      }\r\n      let obj: any\r\n      if (data.kind === 'file') {\r\n        let file = data.getAsFile();\r\n        obj = {\r\n          fileName: file.name,\r\n          selectedFile: file,\r\n        }\r\n      }\r\n      this.selectedFiles.uploadValidateModal = {\r\n        file: obj,\r\n        uploadCompleted: true\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  dragOverHandler(ev: any) {\r\n    ev.preventDefault();\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  onSelectFile(event: any) {\r\n    this.fileEv = event\r\n    console.log(event.target.files)\r\n    if (event.target.files && event.target.files[0]) {\r\n      var filesAmount = event.target.files.length;\r\n      for (let i = 0; i < filesAmount; i++) {\r\n        var reader = new FileReader();\r\n        let file: any = event.target.files[i]\r\n        console.log(file)\r\n\r\n        let obj: any = {\r\n          fileName: file.name,\r\n          selectedFile: file\r\n        }\r\n        this.selectedFiles.uploadValidateModal = {\r\n          file: obj,\r\n          uploadCompleted: true\r\n        }\r\n        // this.selectedFiles.push(obj);\r\n        reader.onload = (event: any) => {\r\n        }\r\n\r\n        reader.readAsDataURL(event.target.files[i]);\r\n        event.target.value = ''\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFile() {\r\n\r\n    this.uploadValidateModal = ''\r\n    this.selectedFiles.uploadValidateModal = {\r\n      file: \"\",\r\n      uploadCompleted: false\r\n    }\r\n    console.log(this.fileEv, \"FILE EV \")\r\n    // this.fileEv.target.value = \"\";\r\n  }\r\n  uploadFiles() {\r\n    console.log(\"coming\", this.selectedFiles)\r\n    const formData = new FormData();\r\n    formData.append(\"filename\", this.selectedFiles.uploadValidateModal.file.selectedFile)\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.apiStringURL.upload, formData).subscribe((data) => {\r\n      console.log(data)\r\n      let resultData: any = data\r\n      this.loadingRouteConfig = false\r\n      this.uploadValidateModal_data = resultData\r\n      this.uploadValidateModal = new MatTableDataSource<basePriceAddtionData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.uploadValidateModal.paginator = this.paginator;\r\n        this.uploadValidateModal.sort = this.sort;\r\n      });\r\n      this.apiMethod.popupMessage('success', 'File data read successfully')\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while reading uploaded file')\r\n    })\r\n  }\r\n\r\n  //==========================end===================================\r\n  //filter \r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.uploadValidateModal.filter = filterValue.trim().toLowerCase();\r\n    if (this.uploadValidateModal.paginator) {\r\n      this.uploadValidateModal.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  //data validate\r\n  validateDataForm() {\r\n    console.log(this.uploadValidateModal)\r\n    let data: any = {\r\n      \"billet\": this.uploadValidateModal_data.data,\r\n      \"filename\": this.uploadValidateModal_data.filename\r\n    }\r\n    this.loadingRouteConfig = true\r\n    this.apiMethod.post_request(this.apiStringURL.validate, data).subscribe((result: any) => {\r\n      console.log(\"success\")\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('success', 'File validated successfully')\r\n      this.location.back()\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while validating uploaded file')\r\n    })\r\n  }\r\n  back() {\r\n    this.location.back()\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<mat-card>\r\n    <!-- ========================file upload start here==========================  -->\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <div class=\"text-left mt-10 mb-10\">\r\n                    <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"back()\">\r\n                        <i class=\"fa fa-arrow-alt-circle-left\"></i>\r\n                        Back\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row bg-w\">\r\n            <div class=\"col-sm-12 col-lg-12 col-md-12 col-xl-12 col-12\">\r\n                <div class=\"mtb-10\">\r\n                    <div class=\"height-100\">\r\n                        <div id=\"drag_zone\" class=\"file-upload-wrapper\" (drop)=\"dropFiles($event)\"\r\n                            (dragover)='dragOverHandler($event)'>\r\n                            <div class=\"pointCenter\">\r\n                                <div class=\"card-drag\">\r\n                                    <span class=\"header\">\r\n                                        you can drag & drop your file here .. <br>\r\n                                        OR\r\n                                    </span>\r\n                                </div>\r\n                                <div>\r\n                                    <button type=\"button\" color=\"primary\" mat-raised-button\r\n                                        [disabled]=\"selectedFiles.uploadValidateModal.file!=''\"\r\n                                        (click)=\"fileInput2.click()\">\r\n                                        Choose file\r\n                                    </button>\r\n                                    <input hidden type='file' (change)=\"onSelectFile($event)\" #fileInput2 id=\"file\"\r\n                                        accept=\".xls, .xlsx\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <mat-list>\r\n                                <mat-list-item *ngIf=\"selectedFiles.uploadValidateModal.uploadCompleted\">\r\n                                    <mat-icon mat-list-icon>note</mat-icon>\r\n                                    <div mat-line>{{selectedFiles.uploadValidateModal.file?.fileName}}</div>\r\n\r\n                                    <div>\r\n                                        <button mat-icon-button color=\"primary\" (click)=\"uploadFiles()\">\r\n                                            <mat-icon>upload</mat-icon>\r\n                                        </button>\r\n                                        <button mat-icon-button color=\"warn\" (click)=\"deleteFile()\">\r\n                                            <mat-icon>delete_forever</mat-icon>\r\n                                        </button>\r\n                                    </div>\r\n                                    <mat-divider></mat-divider>\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- ========================file upload end ========================= -->\r\n    <div class=\"row\" *ngIf=\"uploadValidateModal && (selectedFiles.uploadValidateModal.file)\">\r\n        <!-- <div class=\"row\"> -->\r\n        <div class=\"col-6\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"validateDataForm()\">\r\n                    Validate\r\n                    <span *ngIf=\"this.url[2].split('-').length===1\" style=\"text-transform: capitalize;\">\r\n                        {{url[2].split('-')[0]}}\r\n                    </span>\r\n                    <span *ngIf=\"this.url[2].split('-').length===2\" style=\"text-transform: capitalize;\">\r\n                        {{url[2].split('-')[0] +' '+ url[2].split('-')[1]}}\r\n                    </span>\r\n                    <span *ngIf=\"this.url[2].split('-').length===3\" style=\"text-transform: capitalize;\">\r\n                        {{url[2].split('-')[0] +' '+ url[2].split('-')[1] +' '+ url[2].split('-')[2]}}\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" #input>\r\n                    <mat-icon matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"uploadValidateModal && (selectedFiles.uploadValidateModal.file)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12\">\r\n                <table mat-table [dataSource]=\"uploadValidateModal\" class=\"custom_table order_table\" matSort>\r\n                    <div *ngIf=\"url[3]==='mini-bar';else sample\">\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='delivery-mill') || \r\n                            (url[2]==='freight-parity') || \r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='transport-mode') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"BusinessCode\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='smb') || \r\n                            (url[2]==='extra-certificate') ||\r\n                            (url[2]==='grade') ||\r\n                            (url[2]==='transport-mode') \r\n                        )\">\r\n                            <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Delivering Mill </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='delivery-mill') ||\r\n                            (url[2]==='freight-parity') ||\r\n                            (url[2]==='transport-mode') \r\n                        )\">\r\n                            <ng-container matColumnDef=\"Product_Division\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Product Division </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='delivery-mill') ||\r\n                            (url[2]==='freight_-arity') ||\r\n                            (url[2]==='profile-lberia_italy') ||\r\n                            (url[2]==='transport-mode') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Customer_Group\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Customer Group </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='delivery-mill') ||\r\n                            (url[2]==='freight-parity') ||\r\n                            (url[2]==='profile-lberia-italy') ||\r\n                            (url[2]==='transport-mode') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Customer Group </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <ng-container matColumnDef=\"Market_Customer\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                        </ng-container>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='extra-certificate') ||\r\n                            (url[2]==='grade') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Grade_Category\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Grade Category </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                            </ng-container>\r\n\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='profile-lberia-italy')\r\n                            )\">\r\n\r\n                            <ng-container matColumnDef=\"Product_Level_02\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 02 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='profile')\">\r\n                            <ng-container matColumnDef=\"Product_Level_04\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 04 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_04}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='profile-lberia-italy')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Level_05\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 05 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='transport-mode')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Transport_Mode\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Transport Mode </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                            </ng-container>\r\n\r\n                        </div>\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Length </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='extra-certificate')\">\r\n                            <ng-container matColumnDef=\"Certificate\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Certificate </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Certificate}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='freight-parity')\">\r\n                            <ng-container matColumnDef=\"Zip_Code_Dest\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Zip Code Dest </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Zip_Code_Dest}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div class=\"col-6\" *ngIf=\"(\r\n                            (data?.fileName==='length_logistic') ||\r\n                            (data?.fileName==='length_production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length_From\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Length From </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div class=\"col-6\" *ngIf=\"(\r\n                            (data?.fileName==='length_logistic') ||\r\n                            (data?.fileName==='length_production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length_To\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Length To </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <!-- =========================simple table ================================ -->\r\n                    <ng-template #sample>\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='freight-parity') || \r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='transport-mode') \r\n                        )\">\r\n                            <ng-container matColumnDef=\"BusinessCode\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Business Code </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.BusinessCode}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"!(\r\n                            (url[2]==='smb') || \r\n                            (url[2]==='grade') ||\r\n                            (url[2]==='transport-mode')\r\n                        )\">\r\n                            <ng-container matColumnDef=\"Delivering_Mill\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivering Mill </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                       \r\n                        <div *ngIf=\"(\r\n                            (url[2]==='smb') || \r\n                            (url[2]==='delivery-mill') ||\r\n                            (url[2]==='freight-parity') ||\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='grade') ||\r\n                            (url[2]==='transport-mode') ||\r\n                            (url[2]==='incoterm-exceptions')  \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Division\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Division </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='extra-certificate') ||\r\n                            (url[2]==='grade') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Grade_Category\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Grade Category </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='smb') ||\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='profile-lberia-italy') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Level_02\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 02 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_02}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='profile') \r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Level_04\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 04 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_04}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='profile') ||\r\n                            (url[2]==='profile-lberia-italy')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Product_Level_05\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Level 05 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Product_Level_05}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='transport-mode')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Transport_Mode\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Transport Mode </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Length </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(\r\n                            (url[2]==='grade') ||\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Country_Group\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Country Group </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Country_Group}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='freight-parity')\">\r\n                            <ng-container matColumnDef=\"Zip_Code_Dest\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Zip Code Dest </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Zip_Code_Dest}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='extra-certificate') \">\r\n                            <ng-container matColumnDef=\"Certificate\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Certificate </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Certificate}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"((url[2]==='delivery-mill') ||\r\n                        (url[2]==='incoterm-exceptions') )\">\r\n                            <ng-container matColumnDef=\"Beam_Category\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Beam Category </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"(url[2]==='incoterm-exceptions')\">\r\n                            <ng-container matColumnDef=\"Customer_Group\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Customer Group </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div *ngIf=\"(url[2]==='incoterm-exceptions')\">\r\n                            <ng-container matColumnDef=\"Incoterm1\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Incoterm1 </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Incoterm1}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                        <div class=\"col-6\" *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length_From\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Length From </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length_From}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                        <div class=\"col-6\" *ngIf=\"(\r\n                            (url[2]==='length-logistic') ||\r\n                            (url[2]==='length-production')\r\n                            )\">\r\n                            <ng-container matColumnDef=\"Length_To\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Length To </th>\r\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Length_To}} </td>\r\n                            </ng-container>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-container matColumnDef=\"Market_Country\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Country </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Cur</th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Amount\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"Currency\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                    </ng-container>\r\n\r\n                    <!--=====================================simple design end ===============================  -->\r\n\r\n                    <!--========================== common rows ================================= -->\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n\r\n                </table>\r\n            </div>\r\n            <!-- ========================== simple design ================================= -->\r\n        </div>\r\n    </div>\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SidebarComponent } from 'src/app/common-use/sidebar/sidebar.component';\r\nimport { BasePriceAdditionListComponent } from './base-price/base-price-addition-list/base-price-addition-list.component';\r\nimport { BulkUploadBasePriceAdditionComponent } from './base-price/bulk-upload-base-price-addition/bulk-upload-base-price-addition.component';\r\nimport { DeliveryMillListComponent } from './delivery-mill-list/delivery-mill-list.component';\r\nimport { ExtraCertificateListComponent } from './extra-certificate-list/extra-certificate-list.component';\r\nimport { FreightParityListComponent } from './freight-parity-list/freight-parity-list.component';\r\nimport { GradeListComponent } from './grade-list/grade-list.component';\r\nimport { IncotermExceptionsListComponent } from './incoterm-exceptions/incoterm-exceptions-list/incoterm-exceptions-list.component';\r\nimport { LengthLogisticListComponent } from './length-logistic-list/length-logistic-list.component';\r\nimport { LengthProductionListComponent } from './length-production-list/length-production-list.component';\r\nimport { ProfileLberiaItalyListComponent } from './profile-lberia-italy-list/profile-lberia-italy-list.component';\r\nimport { ProfileListComponent } from './profile-list/profile-list.component';\r\nimport { HistoryModalComponent } from './smb-modal/history-modal/history-modal.component';\r\nimport { UploadValidateModalComponent } from './smb-modal/upload-validate-modal/upload-validate-modal.component';\r\nimport { TransportModeListComponent } from './transport-mode-list/transport-mode-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SidebarComponent,\r\n    children: [\r\n      {\r\n        path: \"base-price\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: BasePriceAdditionListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: BulkUploadBasePriceAdditionComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"delivery-mill\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: DeliveryMillListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"extra-certificate\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: ExtraCertificateListComponent\r\n                },\r\n\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"freight-parity\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: FreightParityListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"grade\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: GradeListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"length-logistic\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: LengthLogisticListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"length-production\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: LengthProductionListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"profile\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: ProfileListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"profile-lberia-italy\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: ProfileLberiaItalyListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"transport-mode\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: TransportModeListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      },\r\n      {\r\n        path: \"incoterm-exceptions\",\r\n        children:\r\n          [\r\n            ...['', 'mini-bar'].map(path => ({\r\n              path,\r\n              children: [\r\n                {\r\n                  path: \"list\",\r\n                  component: IncotermExceptionsListComponent\r\n                },\r\n                {\r\n                  path: \"bulk-upload\",\r\n                  component: UploadValidateModalComponent\r\n                },\r\n                {\r\n                  path: \"history\",\r\n                  component: HistoryModalComponent\r\n                }\r\n              ]\r\n            }))\r\n          ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SmbRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { transportModeData } from '../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { EditPopupComponent } from '../smb-modal/edit-popup/edit-popup.component';\r\nimport { AddPopupComponent } from '../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-transport-mode-list',\r\n  templateUrl: './transport-mode-list.component.html',\r\n  styleUrls: ['./transport-mode-list.component.scss']\r\n})\r\nexport class TransportModeListComponent implements OnInit {\r\n\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.transport_mode\r\n        this.displayedColumns = [\r\n          'Product_Division',\r\n          'Market_Country',\r\n          'Transport_Mode',\r\n          'Document_Item_Currency',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      } else {\r\n        this.apiStringURL = this.apiString.transport_mode_mini_bar\r\n\r\n        this.displayedColumns = [\r\n          'Product_Division',\r\n          'Market_Country',\r\n          'Transport_Mode',\r\n          'Document_Item_Currency',\r\n          'Market_Customer_Group',\r\n          'Market_Customer',\r\n          'Amount',\r\n          'Currency',\r\n          'action'\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTransportMode()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getTransportMode() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<transportModeData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getTransportMode()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getTransportMode()\r\n  }\r\n  actionClicked(rowData: any, viewOn: any) {\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"transport_mode\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getTransportMode()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(EditPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"transport_mode\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getTransportMode()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getTransportMode()\r\n      })\r\n    }\r\n  }\r\n  uploadByXlFile() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/transport-mode/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/transport-mode/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadInXlFile() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"actionClicked('','add')\">\r\n                    Add Transport Mode\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button (click)=\"uploadByXlFile()\">\r\n                    Upload Transport Mode\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadInXlFile()\">\r\n                    Download Transport Mode\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n                <ng-container matColumnDef=\"Product_Division\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Product Division </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Transport_Mode\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Transport Mode </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Transport_Mode}} </td>\r\n                </ng-container>\r\n\r\n                <div *ngIf=\"url[3]==='mini-bar'\">\r\n                    <ng-container matColumnDef=\"Market_Customer_Group\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Customer Group </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer_Group}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Market_Customer\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Market - Customer </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.Market_Customer}} </td>\r\n                    </ng-container>\r\n                </div>\r\n\r\n                <ng-container matColumnDef=\"Grade_Category\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Grade Category </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Grade_Category}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"actionClicked(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CitGlobalConstantService } from 'src/app/services/api-collection';\r\nimport { ApiService } from 'src/app/services/api.service';\r\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { incotermExceptionsData } from '../../smb-interface.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { WarnPopupComponent } from '../../smb-modal/warn-popup/warn-popup.component';\r\nimport { filter } from 'rxjs/operators';\r\nimport { IncotermExceptionsEditComponent } from '../incoterm-exceptions-edit/incoterm-exceptions-edit.component';\r\nimport { EditPopupComponent } from '../../smb-modal/edit-popup/edit-popup.component';\r\nimport { rowData } from 'src/app/sample';\r\nimport { AddPopupComponent } from '../../smb-modal/add-popup/add-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-incoterm-exceptions-list',\r\n  templateUrl: './incoterm-exceptions-list.component.html',\r\n  styleUrls: ['./incoterm-exceptions-list.component.scss']\r\n})\r\nexport class IncotermExceptionsListComponent implements OnInit {\r\n\r\n  data: any = rowData\r\n  loadingRouteConfig: boolean = false\r\n  displayedColumns: string[] = [];\r\n  dataSource: any;\r\n  searchValue: any\r\n  pageEvent: any = PageEvent;\r\n  @ViewChild(MatPaginator) paginator: any = MatPaginator;\r\n  @ViewChild(MatSort) sort: any = MatSort;\r\n  pageLength: any = 500;\r\n  pageOffset: any = 0;\r\n  totalCount: any = 0;\r\n  url: any;\r\n  apiStringURL: any;\r\n  constructor(\r\n    private apiString: CitGlobalConstantService,\r\n    private apiMethod: ApiService,\r\n    private router: Router,\r\n    private popup: MatDialog,\r\n  ) {\r\n    router.events.pipe(\r\n      filter((event: any) => event instanceof NavigationEnd)\r\n    ).subscribe((event: NavigationEnd) => {\r\n      console.log(event.url.split('/'));\r\n      this.url = event.url.split('/')\r\n      console.log(this.url)\r\n      if (this.url[3] != 'mini-bar') {\r\n        this.apiStringURL = this.apiString.incoterm_exceptions\r\n        this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency', \"action\"]\r\n      } else {\r\n        this.apiStringURL = this.apiString.incoterm_exceptions_mini_bar\r\n        this.displayedColumns = ['Market_Country', 'Product_Division', 'Incoterm1', 'Customer_Group', 'Beam_Category', 'Delivering_Mill', 'Document_Item_Currency', 'Amount', 'Currency', \"action\"]\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getIncotermExceptions()\r\n  }\r\n  //getting uploaded history of alloy scrap \r\n  getIncotermExceptions() {\r\n    this.loadingRouteConfig = true\r\n    let searchString: any\r\n    if (this.searchValue) {\r\n      searchString = this.searchValue\r\n    } else {\r\n      searchString = \"all\"\r\n    }\r\n    this.dataSource = new MatTableDataSource<incotermExceptionsData>(this.data)\r\n    this.apiMethod.get_request(this.apiStringURL.list + \"?offset=\" + this.pageOffset + \"&limit=\" + this.pageLength + \"&search_string=\" + searchString).subscribe(result => {\r\n      console.log(result)\r\n      let resultData: any = result\r\n      this.totalCount = resultData.totalCount\r\n      this.loadingRouteConfig = false\r\n      this.dataSource = new MatTableDataSource<incotermExceptionsData>(resultData.data)\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      })\r\n    }, error => {\r\n      this.loadingRouteConfig = false\r\n      this.apiMethod.popupMessage('error', 'Error while fatching history')\r\n    })\r\n  }\r\n  //page change \r\n  pageChangeCall(event: any) {\r\n    console.log(event)\r\n    this.pageOffset = event.pageIndex\r\n    this.pageLength = event.pageSize\r\n    this.getIncotermExceptions()\r\n  }\r\n  //filter \r\n  applyFilter() {\r\n    const filterValue = this.searchValue;\r\n    this.pageOffset = 0\r\n    this.pageLength = 500\r\n    this.getIncotermExceptions()\r\n  }\r\n  incotermExceptionsClick(rowData: any, viewOn: any) {\r\n    console.log(rowData)\r\n    if (viewOn === 'add') {\r\n      const dialogRef = this.popup.open(AddPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: '',\r\n            addURL: this.apiStringURL.add,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'add',\r\n            fileName: \"incoterm_exceptions\",\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getIncotermExceptions()\r\n      })\r\n    }\r\n    if (viewOn === 'edit') {\r\n      const dialogRef = this.popup.open(IncotermExceptionsEditComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            content: rowData,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'miniBar' : 'edit',\r\n            fileName: \"incoterm_exceptions\",\r\n            updateURL: this.apiStringURL.update,\r\n            fieldValue: this.displayedColumns\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The edit dialog was closed', result);\r\n        this.getIncotermExceptions()\r\n      })\r\n    }\r\n\r\n    if (viewOn === 'delete') {\r\n      const dialogRef = this.popup.open(WarnPopupComponent,\r\n        {\r\n          panelClass: 'my-full-screen-dialog',\r\n          autoFocus: false,\r\n          maxHeight: '90vh',\r\n          data: {\r\n            id: rowData.id,\r\n            url: this.apiStringURL.get + \"?id=\" + rowData.id,\r\n            type: this.url[3] === 'mini-bar' ? 'delete-min-bar' : 'delete',\r\n            deleteURL: this.apiStringURL.delete\r\n\r\n          },\r\n        });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The Delete dialog was closed', result);\r\n        this.getIncotermExceptions()\r\n      })\r\n\r\n    }\r\n  }\r\n  uploadIncotermExceptions() {\r\n    if (this.url[3] != 'mini-bar') {\r\n      this.router.navigate(['/smb/incoterm-exceptions/bulk-upload'])\r\n    } else {\r\n      this.router.navigate(['/smb/incoterm-exceptions/mini-bar/bulk-upload'])\r\n    }\r\n  }\r\n  downloadIncotermExceptions() {\r\n    window.open(this.apiStringURL.download, \"_blank\")\r\n  }\r\n}\r\n","<ng-container *ngIf=\"loadingRouteConfig\">\r\n    <div class=\"loading-overlay is-active\">\r\n        <span class=\"signal\"></span>\r\n    </div>\r\n</ng-container>\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-8\">\r\n            <div class=\"text-left mt-10\">\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button\r\n                    (click)=\"incotermExceptionsClick('','add')\">\r\n                    Add Incoterm Exceptions\r\n                </button>\r\n\r\n                <button type=\"button\" color=\"primary\" class=\"mr-10\" mat-raised-button\r\n                    (click)=\"uploadIncotermExceptions()\">\r\n                    Upload Incoterm Exceptions\r\n                </button>\r\n                <button type=\"button\" color=\"primary\" mat-raised-button (click)=\"downloadIncotermExceptions()\">\r\n                    Download Incoterm Exceptions\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-4\">\r\n            <div class=\"text-right mt-10\">\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput [(ngModel)]=\"searchValue\" (keyup.enter)=\"applyFilter()\">\r\n                    <mat-icon matSuffix (click)=\"applyFilter()\" class=\"pointer\">search</mat-icon>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <table mat-table [dataSource]=\"dataSource\" class=\"custom_table order_table\" matSort>\r\n\r\n                <ng-container matColumnDef=\"Market_Country\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Market Country </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Market_Country}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Product_Division\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Product Division </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Product_Division}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Incoterm1\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Incoterm1 </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Incoterm1}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"Customer_Group\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Customer Group </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Customer_Group}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Beam_Category\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Beam Category </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Beam_Category}} </td>\r\n                </ng-container>\r\n\r\n\r\n                <ng-container matColumnDef=\"Delivering_Mill\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Delivering Mill </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Delivering_Mill}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"Document_Item_Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Doc Item Cur</th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Document_Item_Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Amount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Amount}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"Currency\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Currency </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.Currency}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"action\">\r\n                    <th mat-header-cell *matHeaderCellDef> Action </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-icon class=\"mr-10\" (click)=\"incotermExceptionsClick(row,'edit')\">edit</mat-icon>\r\n                        <mat-icon class=\"mr-10\" (click)=\"incotermExceptionsClick(row,'delete')\">delete</mat-icon>\r\n\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                    <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{searchValue}}\"\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <mat-paginator [length]=\"totalCount\" [pageSize]=\"500\" [pageSizeOptions]=\"[500,1000,1500,2000]\" #paginators\r\n                (page)=\"pageEvent = pageChangeCall($event)\">\r\n            </mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-smb',\r\n  templateUrl: './smb.component.html',\r\n  styleUrls: ['./smb.component.scss']\r\n})\r\nexport class SmbComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>smb works!</p>\r\n"],"sourceRoot":"webpack:///"}